type Query {
  owner: UserDto
  endpoint(id: ID!): EndpointDto
}

type UserDto {
  id: ID!
  endpoints(
    before: String
    after: String
    first: Int
    last: Int
  ): OwnerEndpointsConnectionDto!
}

type OwnerEndpointsConnectionDto {
  edges: [OwnerEndpointEdgeDto!]!
  pageInfo: PageInfoDto!
}

type OwnerEndpointEdgeDto {
  cursor: String!
  node: OwnerEndpointDto!
}

type OwnerEndpointDto {
  id: ID!
  apiKey: String!
}

type EndpointDto {
  id: ID!
  apiKey: String!
  requests(
    before: String
    after: String
    first: Int
    last: Int
  ): EndpointRequestsConnectionDto!
}

type EndpointRequestsConnectionDto {
  edges: [EndpointRequestEdgeDto!]!
  pageInfo: PageInfoDto!
}

type EndpointRequestEdgeDto {
  cursor: String!
  node: EndpointRequestDto!
}

type EndpointRequestDto {
  id: ID!
  receiveTime: String!
  uri: String!
  method: String!
  headers: [RequestHeaderDto!]!
  base64EncodedBody: String
}

type RequestHeaderDto {
  name: String!
  values: [String!]!
}

type PageInfoDto {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}
